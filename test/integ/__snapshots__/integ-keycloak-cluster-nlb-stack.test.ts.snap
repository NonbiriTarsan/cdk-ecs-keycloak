// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`nlb example 1`] = `
Object {
  "Outputs": Object {
    "KeycloakLoadBalancerEndpointPort8080E65A8FCA": Object {
      "Value": Object {
        "Fn::Sub": Array [
          "\${Host}:\${Port}",
          Object {
            "Host": Object {
              "Fn::GetAtt": Array [
                "KeycloakLoadBalancer21EA60AD",
                "DNSName",
              ],
            },
            "Port": "8080",
          },
        ],
      },
    },
    "KeycloakLoadBalancerEndpointPort8443F6CBB041": Object {
      "Value": Object {
        "Fn::Sub": Array [
          "\${Host}:\${Port}",
          Object {
            "Host": Object {
              "Fn::GetAtt": Array [
                "KeycloakLoadBalancer21EA60AD",
                "DNSName",
              ],
            },
            "Port": "8443",
          },
        ],
      },
    },
    "KeycloakLoadBalancerEndpointPort99904B4070F4": Object {
      "Value": Object {
        "Fn::Sub": Array [
          "\${Host}:\${Port}",
          Object {
            "Host": Object {
              "Fn::GetAtt": Array [
                "KeycloakLoadBalancer21EA60AD",
                "DNSName",
              ],
            },
            "Port": "9990",
          },
        ],
      },
    },
  },
  "Resources": Object {
    "KeycloakClusterE151A98B": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "KeycloakDatabase9FB2EF02": Object {
      "Properties": Object {
        "DBClusterParameterGroupName": "default.aurora-mysql5.7",
        "DBSubnetGroupName": Object {
          "Ref": "KeycloakDatabaseSubnets53DB24A3",
        },
        "Engine": "aurora-mysql",
        "EngineMode": "serverless",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "KeycloakDatabaseSecret1C63E8D7",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "KeycloakDatabaseSecret1C63E8D7",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "ScalingConfiguration": Object {
          "AutoPause": true,
          "MaxCapacity": 1,
          "MinCapacity": 1,
          "SecondsUntilAutoPause": 300,
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "KeycloakDatabaseSecurityGroupA9E9D19B",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "KeycloakDatabaseSecret1C63E8D7": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
    },
    "KeycloakDatabaseSecretAttachment10F733C4": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "KeycloakDatabaseSecret1C63E8D7",
        },
        "TargetId": Object {
          "Ref": "KeycloakDatabase9FB2EF02",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "KeycloakDatabaseSecurityGroupA9E9D19B": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakDatabaseSecurityGroupfrominteglitsimplestKeycloakServiceSecurityGroup39D81BE4IndirectPort09F21660": Object {
      "Properties": Object {
        "Description": "from integlitsimplestKeycloakServiceSecurityGroup39D81BE4:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabase9FB2EF02",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabaseSecurityGroupA9E9D19B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabase9FB2EF02",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakDatabaseSubnets53DB24A3": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for Database database",
        "SubnetIds": Array [
          Object {
            "Ref": "KeycloakVpcprivateSubnet1Subnet4F974197",
          },
          Object {
            "Ref": "KeycloakVpcprivateSubnet2Subnet6BA43A32",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "KeycloakLoadBalancer21EA60AD": Object {
      "DependsOn": Array [
        "KeycloakVpcingressSubnet1DefaultRouteA1857EB8",
        "KeycloakVpcingressSubnet2DefaultRouteDAB52A53",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "Subnets": Array [
          Object {
            "Ref": "KeycloakVpcingressSubnet1Subnet8AF14C17",
          },
          Object {
            "Ref": "KeycloakVpcingressSubnet2Subnet2146939B",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "KeycloakLoadBalancerPort8080ABF19751": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerPort8080TargetGroup450D354F",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "KeycloakLoadBalancer21EA60AD",
        },
        "Port": 8080,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "KeycloakLoadBalancerPort8080TargetGroup450D354F": Object {
      "Properties": Object {
        "HealthCheckEnabled": true,
        "Port": 8080,
        "Protocol": "TCP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "5",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "KeycloakLoadBalancerPort844320F3AEDE": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerPort8443TargetGroup6260D1CF",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "KeycloakLoadBalancer21EA60AD",
        },
        "Port": 8443,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "KeycloakLoadBalancerPort8443TargetGroup6260D1CF": Object {
      "Properties": Object {
        "Port": 8443,
        "Protocol": "TCP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "5",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "KeycloakLoadBalancerPort999066C9F95E": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerPort9990TargetGroupD0D649A4",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "KeycloakLoadBalancer21EA60AD",
        },
        "Port": 9990,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "KeycloakLoadBalancerPort9990TargetGroupD0D649A4": Object {
      "Properties": Object {
        "Port": 9990,
        "Protocol": "TCP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "5",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "KeycloakService398C344C": Object {
      "DependsOn": Array [
        "KeycloakLoadBalancerPort8080ABF19751",
        "KeycloakLoadBalancerPort8080TargetGroup450D354F",
        "KeycloakLoadBalancerPort844320F3AEDE",
        "KeycloakLoadBalancerPort8443TargetGroup6260D1CF",
        "KeycloakLoadBalancerPort999066C9F95E",
        "KeycloakLoadBalancerPort9990TargetGroupD0D649A4",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "KeycloakClusterE151A98B",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 600,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "keycloak",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerPort8080TargetGroup450D354F",
            },
          },
          Object {
            "ContainerName": "keycloak",
            "ContainerPort": 8443,
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerPort8443TargetGroup6260D1CF",
            },
          },
          Object {
            "ContainerName": "keycloak",
            "ContainerPort": 9990,
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerPort9990TargetGroupD0D649A4",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "KeycloakServiceSecurityGroup9C087FD3",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "KeycloakVpcprivateSubnet1Subnet4F974197",
              },
              Object {
                "Ref": "KeycloakVpcprivateSubnet2Subnet6BA43A32",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "KeycloakServiceCloudmapService002D27A5",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "KeycloakTaskDefinition8FFB493C",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "KeycloakServiceCloudmapService002D27A5": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "KeycloakServiceDiscoveryNS13221F25",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceDiscoveryNS13221F25",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "KeycloakServiceDiscoveryNS13221F25": Object {
      "Properties": Object {
        "Name": "keycloak-service-discovery",
        "Vpc": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "KeycloakServiceSecurityGroup9C087FD3": Object {
      "Properties": Object {
        "GroupDescription": "integ-lit-simplest/Keycloak/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:8080",
            "FromPort": 8080,
            "IpProtocol": "tcp",
            "ToPort": 8080,
          },
          Object {
            "CidrIpv6": "::/0",
            "Description": "from ::/0:8080",
            "FromPort": 8080,
            "IpProtocol": "tcp",
            "ToPort": 8080,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:8443",
            "FromPort": 8443,
            "IpProtocol": "tcp",
            "ToPort": 8443,
          },
          Object {
            "CidrIpv6": "::/0",
            "Description": "from ::/0:8443",
            "FromPort": 8443,
            "IpProtocol": "tcp",
            "ToPort": 8443,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "from 0.0.0.0/0:9990",
            "FromPort": 9990,
            "IpProtocol": "tcp",
            "ToPort": 9990,
          },
          Object {
            "CidrIpv6": "::/0",
            "Description": "from ::/0:9990",
            "FromPort": 9990,
            "IpProtocol": "tcp",
            "ToPort": 9990,
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakServiceSecurityGroupfrominteglitsimplestKeycloakServiceSecurityGroup39D81BE4ALLTRAFFIC30A307CE": Object {
      "Properties": Object {
        "Description": "from integlitsimplestKeycloakServiceSecurityGroup39D81BE4:ALL TRAFFIC",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakTaskDefinition8FFB493C": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "DependsOn": Array [
              Object {
                "Condition": "COMPLETE",
                "ContainerName": "ensure-mysql-database",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "KEYCLOAK_USER",
                "Value": "admin",
              },
              Object {
                "Name": "KEYCLOAK_PASSWORD",
                "Value": "admin",
              },
              Object {
                "Name": "DB_VENDOR",
                "Value": "mysql",
              },
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROTOCOL",
                "Value": "dns.DNS_PING",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROPERTIES",
                "Value": Object {
                  "Fn::Sub": Array [
                    "dns_query=\${ServiceName}.\${ServiceNamespace},dns_record_type=\${QueryType}",
                    Object {
                      "QueryType": "A",
                      "ServiceName": Object {
                        "Fn::GetAtt": Array [
                          "KeycloakServiceCloudmapService002D27A5",
                          "Name",
                        ],
                      },
                      "ServiceNamespace": "keycloak-service-discovery",
                    },
                  ],
                },
              },
              Object {
                "Name": "CACHE_OWNERS_COUNT",
                "Value": "1",
              },
              Object {
                "Name": "CACHE_OWNERS_AUTH_SESSIONS_COUNT",
                "Value": "1",
              },
              Object {
                "Name": "JDBC_PARAMS",
                "Value": "useSSL=false",
              },
              Object {
                "Name": "JAVA_OPTS",
                "Value": "-Djboss.bind.address.management=0.0.0.0",
              },
            ],
            "Essential": true,
            "Image": "jboss/keycloak",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Memory": 2048,
            "MemoryReservation": 1638,
            "Name": "keycloak",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 8443,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 9990,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 7600,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 57600,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 55200,
                "Protocol": "udp",
              },
              Object {
                "ContainerPort": 54200,
                "Protocol": "udp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          Object {
            "Command": Array [
              "sh",
              "-c",
              "mysql -u\\"$DB_USER\\" -p\\"$DB_PASSWORD\\" -h\\"$DB_ADDR\\" -e \\"CREATE DATABASE IF NOT EXISTS $DB_NAME\\"",
            ],
            "Environment": Array [
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
            ],
            "Essential": false,
            "Image": "mysql",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Memory": 128,
            "MemoryReservation": 32,
            "Name": "ensure-mysql-database",
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "KeycloakTaskDefinitionExecutionRole65FF88EF",
            "Arn",
          ],
        },
        "Family": "integlitsimplestKeycloakTaskDefinition76B8A95A",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "KeycloakTaskDefinitionTaskRole35970846",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "KeycloakTaskDefinitionExecutionRole65FF88EF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KeycloakTaskDefinitionExecutionRoleDefaultPolicy5A183F46": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KeycloakTaskDefinitionExecutionRoleDefaultPolicy5A183F46",
        "Roles": Array [
          Object {
            "Ref": "KeycloakTaskDefinitionExecutionRole65FF88EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KeycloakTaskDefinitionTaskRole35970846": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "KeycloakVpc8A8F96DC": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "KeycloakVpcIGWA73B101E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "KeycloakVpcVPCGW209A1D6F": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "KeycloakVpcIGWA73B101E",
        },
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "KeycloakVpcingressSubnet1DefaultRouteA1857EB8": Object {
      "DependsOn": Array [
        "KeycloakVpcVPCGW209A1D6F",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "KeycloakVpcIGWA73B101E",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet1RouteTableCF5F46E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcingressSubnet1EIP2111A6F1": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "KeycloakVpcingressSubnet1NATGateway32A1168B": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "KeycloakVpcingressSubnet1EIP2111A6F1",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet1Subnet8AF14C17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "KeycloakVpcingressSubnet1RouteTableAssociation9A9E14B7": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet1RouteTableCF5F46E1",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet1Subnet8AF14C17",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcingressSubnet1RouteTableCF5F46E1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcingressSubnet1Subnet8AF14C17": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "KeycloakVpcingressSubnet2DefaultRouteDAB52A53": Object {
      "DependsOn": Array [
        "KeycloakVpcVPCGW209A1D6F",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "KeycloakVpcIGWA73B101E",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet2RouteTable9F64BD61",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcingressSubnet2EIP6A95B85F": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "KeycloakVpcingressSubnet2NATGatewayDE17D04C": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "KeycloakVpcingressSubnet2EIP6A95B85F",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet2Subnet2146939B",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "KeycloakVpcingressSubnet2RouteTable9F64BD61": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcingressSubnet2RouteTableAssociation9C37B3FF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet2RouteTable9F64BD61",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet2Subnet2146939B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcingressSubnet2Subnet2146939B": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "KeycloakVpcprivateSubnet1DefaultRouteB4B66400": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "KeycloakVpcingressSubnet1NATGateway32A1168B",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet1RouteTable70CBA54C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcprivateSubnet1RouteTable70CBA54C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcprivateSubnet1RouteTableAssociationF27128EB": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet1RouteTable70CBA54C",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcprivateSubnet1Subnet4F974197",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcprivateSubnet1Subnet4F974197": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.8.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "KeycloakVpcprivateSubnet2DefaultRouteCEB187E0": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "KeycloakVpcingressSubnet2NATGatewayDE17D04C",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet2RouteTable5477ED2B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcprivateSubnet2RouteTable5477ED2B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcprivateSubnet2RouteTableAssociation28D949F0": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet2RouteTable5477ED2B",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcprivateSubnet2Subnet6BA43A32",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcprivateSubnet2Subnet6BA43A32": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.16.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
}
`;
