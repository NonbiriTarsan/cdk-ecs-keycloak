// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bigger example 1`] = `
Object {
  "Outputs": Object {
    "KeycloakLoadBalancerUrl601AE2AE": Object {
      "Value": Object {
        "Fn::Sub": Array [
          "https://\${HostName}/",
          Object {
            "HostName": Object {
              "Fn::GetAtt": Array [
                "KeycloakLoadBalancer21EA60AD",
                "DNSName",
              ],
            },
          },
        ],
      },
    },
  },
  "Resources": Object {
    "KeycloakClusterE151A98B": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "KeycloakDatabase9FB2EF02": Object {
      "Properties": Object {
        "DBClusterParameterGroupName": "default.aurora-mysql5.7",
        "DBSubnetGroupName": Object {
          "Ref": "KeycloakDatabaseSubnets53DB24A3",
        },
        "Engine": "aurora-mysql",
        "EngineMode": "serverless",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "KeycloakDatabaseSecret1C63E8D7",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "KeycloakDatabaseSecret1C63E8D7",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "ScalingConfiguration": Object {
          "AutoPause": true,
          "MaxCapacity": 1,
          "MinCapacity": 1,
          "SecondsUntilAutoPause": 300,
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "KeycloakDatabaseSecurityGroupA9E9D19B",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "KeycloakDatabaseSecret1C63E8D7": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
    },
    "KeycloakDatabaseSecretAttachment10F733C4": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "KeycloakDatabaseSecret1C63E8D7",
        },
        "TargetId": Object {
          "Ref": "KeycloakDatabase9FB2EF02",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "KeycloakDatabaseSecurityGroupA9E9D19B": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakDatabaseSecurityGroupfrominteglitbiggerKeycloakServiceSecurityGroupF1F4C2C4IndirectPortD3957FF9": Object {
      "Properties": Object {
        "Description": "from integlitbiggerKeycloakServiceSecurityGroupF1F4C2C4:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabase9FB2EF02",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabaseSecurityGroupA9E9D19B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabase9FB2EF02",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakDatabaseSubnets53DB24A3": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for Database database",
        "SubnetIds": Array [
          Object {
            "Ref": "KeycloakVpcprivateSubnet1Subnet4F974197",
          },
          Object {
            "Ref": "KeycloakVpcprivateSubnet2Subnet6BA43A32",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "KeycloakLoadBalancer21EA60AD": Object {
      "DependsOn": Array [
        "KeycloakVpcingressSubnet1DefaultRouteA1857EB8",
        "KeycloakVpcingressSubnet2DefaultRouteDAB52A53",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "KeycloakLoadBalancerSecurityGroupBD1401A8",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "KeycloakVpcingressSubnet1Subnet8AF14C17",
          },
          Object {
            "Ref": "KeycloakVpcingressSubnet2Subnet2146939B",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "KeycloakLoadBalancerHTTPS6970B755": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": "provide this context on the cli",
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerHTTPSKeycloakGroupF8466409",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "KeycloakLoadBalancer21EA60AD",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "KeycloakLoadBalancerHTTPSKeycloakGroupF8466409": Object {
      "Properties": Object {
        "HealthCheckEnabled": true,
        "HealthCheckPath": "/auth/realms/master",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "5",
          },
          Object {
            "Key": "slow_start.duration_seconds",
            "Value": "60",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "KeycloakLoadBalancerSecurityGroupBD1401A8": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB integlitbiggerKeycloakLoadBalancerAB971CF6",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakLoadBalancerSecurityGrouptointeglitbiggerKeycloakServiceSecurityGroupF1F4C2C48080EA2E8FFD": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakLoadBalancerSecurityGroupBD1401A8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "KeycloakService398C344C": Object {
      "DependsOn": Array [
        "KeycloakLoadBalancerHTTPSKeycloakGroupF8466409",
        "KeycloakLoadBalancerHTTPS6970B755",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "KeycloakClusterE151A98B",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 600,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "keycloak",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerHTTPSKeycloakGroupF8466409",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "KeycloakServiceSecurityGroup9C087FD3",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "KeycloakVpcprivateSubnet1Subnet4F974197",
              },
              Object {
                "Ref": "KeycloakVpcprivateSubnet2Subnet6BA43A32",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "KeycloakServiceCloudmapService002D27A5",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "KeycloakTaskDefinition8FFB493C",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "KeycloakServiceCloudmapService002D27A5": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "KeycloakServiceDiscoveryNS13221F25",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceDiscoveryNS13221F25",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "KeycloakServiceDiscoveryNS13221F25": Object {
      "Properties": Object {
        "Name": "keycloak-service-discovery",
        "Vpc": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "KeycloakServiceSecurityGroup9C087FD3": Object {
      "Properties": Object {
        "GroupDescription": "integ-lit-bigger/Keycloak/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakServiceSecurityGroupfrominteglitbiggerKeycloakLoadBalancerSecurityGroupEC112C388080DDCE27B0": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakLoadBalancerSecurityGroupBD1401A8",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakServiceSecurityGroupfrominteglitbiggerKeycloakServiceSecurityGroupF1F4C2C4ALLTRAFFIC91D7658C": Object {
      "Properties": Object {
        "Description": "from integlitbiggerKeycloakServiceSecurityGroupF1F4C2C4:ALL TRAFFIC",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakServiceTaskCountTarget51F033D1": Object {
      "Properties": Object {
        "MaxCapacity": 5,
        "MinCapacity": 3,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "KeycloakClusterE151A98B",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "KeycloakService398C344C",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "KeycloakServiceTaskCountTargetTarget40E7C31114": Object {
      "Properties": Object {
        "PolicyName": "integlitbiggerKeycloakServiceTaskCountTargetTarget4033BCB567",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "KeycloakServiceTaskCountTarget51F033D1",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 600,
          "ScaleOutCooldown": 1800,
          "TargetValue": 40,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "KeycloakTaskDefinition8FFB493C": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "DependsOn": Array [
              Object {
                "Condition": "COMPLETE",
                "ContainerName": "ensure-mysql-database",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "KEYCLOAK_USER",
                "Value": "admin",
              },
              Object {
                "Name": "KEYCLOAK_PASSWORD",
                "Value": "admin",
              },
              Object {
                "Name": "DB_VENDOR",
                "Value": "mysql",
              },
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROTOCOL",
                "Value": "dns.DNS_PING",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROPERTIES",
                "Value": Object {
                  "Fn::Sub": Array [
                    "dns_query=\${ServiceName}.\${ServiceNamespace},dns_record_type=\${QueryType}",
                    Object {
                      "QueryType": "A",
                      "ServiceName": Object {
                        "Fn::GetAtt": Array [
                          "KeycloakServiceCloudmapService002D27A5",
                          "Name",
                        ],
                      },
                      "ServiceNamespace": "keycloak-service-discovery",
                    },
                  ],
                },
              },
              Object {
                "Name": "CACHE_OWNERS_COUNT",
                "Value": "2",
              },
              Object {
                "Name": "CACHE_OWNERS_AUTH_SESSIONS_COUNT",
                "Value": "2",
              },
              Object {
                "Name": "JDBC_PARAMS",
                "Value": "useSSL=false",
              },
              Object {
                "Name": "JAVA_OPTS",
                "Value": "-Djboss.bind.address.management=0.0.0.0",
              },
            ],
            "Essential": true,
            "Image": "jboss/keycloak",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Memory": 1024,
            "MemoryReservation": 819,
            "Name": "keycloak",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 8443,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 9990,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 7600,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 57600,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 55200,
                "Protocol": "udp",
              },
              Object {
                "ContainerPort": 54200,
                "Protocol": "udp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          Object {
            "Command": Array [
              "sh",
              "-c",
              "mysql -u\\"$DB_USER\\" -p\\"$DB_PASSWORD\\" -h\\"$DB_ADDR\\" -e \\"CREATE DATABASE IF NOT EXISTS $DB_NAME\\"",
            ],
            "Environment": Array [
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
            ],
            "Essential": false,
            "Image": "mysql",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Memory": 128,
            "MemoryReservation": 32,
            "Name": "ensure-mysql-database",
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "512",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "KeycloakTaskDefinitionExecutionRole65FF88EF",
            "Arn",
          ],
        },
        "Family": "integlitbiggerKeycloakTaskDefinitionA5B6282A",
        "Memory": "1024",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "KeycloakTaskDefinitionTaskRole35970846",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "KeycloakTaskDefinitionExecutionRole65FF88EF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KeycloakTaskDefinitionExecutionRoleDefaultPolicy5A183F46": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KeycloakTaskDefinitionExecutionRoleDefaultPolicy5A183F46",
        "Roles": Array [
          Object {
            "Ref": "KeycloakTaskDefinitionExecutionRole65FF88EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KeycloakTaskDefinitionTaskRole35970846": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "KeycloakVpc8A8F96DC": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "KeycloakVpcIGWA73B101E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "KeycloakVpcVPCGW209A1D6F": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "KeycloakVpcIGWA73B101E",
        },
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "KeycloakVpcingressSubnet1DefaultRouteA1857EB8": Object {
      "DependsOn": Array [
        "KeycloakVpcVPCGW209A1D6F",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "KeycloakVpcIGWA73B101E",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet1RouteTableCF5F46E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcingressSubnet1EIP2111A6F1": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "KeycloakVpcingressSubnet1NATGateway32A1168B": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "KeycloakVpcingressSubnet1EIP2111A6F1",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet1Subnet8AF14C17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "KeycloakVpcingressSubnet1RouteTableAssociation9A9E14B7": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet1RouteTableCF5F46E1",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet1Subnet8AF14C17",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcingressSubnet1RouteTableCF5F46E1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcingressSubnet1Subnet8AF14C17": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "KeycloakVpcingressSubnet2DefaultRouteDAB52A53": Object {
      "DependsOn": Array [
        "KeycloakVpcVPCGW209A1D6F",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "KeycloakVpcIGWA73B101E",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet2RouteTable9F64BD61",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcingressSubnet2EIP6A95B85F": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "KeycloakVpcingressSubnet2NATGatewayDE17D04C": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "KeycloakVpcingressSubnet2EIP6A95B85F",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet2Subnet2146939B",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "KeycloakVpcingressSubnet2RouteTable9F64BD61": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcingressSubnet2RouteTableAssociation9C37B3FF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet2RouteTable9F64BD61",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet2Subnet2146939B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcingressSubnet2Subnet2146939B": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "KeycloakVpcprivateSubnet1DefaultRouteB4B66400": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "KeycloakVpcingressSubnet1NATGateway32A1168B",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet1RouteTable70CBA54C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcprivateSubnet1RouteTable70CBA54C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcprivateSubnet1RouteTableAssociationF27128EB": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet1RouteTable70CBA54C",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcprivateSubnet1Subnet4F974197",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcprivateSubnet1Subnet4F974197": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.8.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "KeycloakVpcprivateSubnet2DefaultRouteCEB187E0": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "KeycloakVpcingressSubnet2NATGatewayDE17D04C",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet2RouteTable5477ED2B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcprivateSubnet2RouteTable5477ED2B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcprivateSubnet2RouteTableAssociation28D949F0": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet2RouteTable5477ED2B",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcprivateSubnet2Subnet6BA43A32",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcprivateSubnet2Subnet6BA43A32": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.16.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-bigger/Keycloak/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
}
`;

exports[`byol example 1`] = `
Object {
  "Outputs": Object {
    "AlbAddress": Object {
      "Value": Object {
        "Fn::Sub": Array [
          "http://\${Name}",
          Object {
            "Name": Object {
              "Fn::GetAtt": Array [
                "Alb16C2F182",
                "DNSName",
              ],
            },
          },
        ],
      },
    },
  },
  "Resources": Object {
    "Alb16C2F182": Object {
      "DependsOn": Array [
        "VpcingressSubnet1DefaultRoute4188A546",
        "VpcingressSubnet2DefaultRoute18203BC3",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "AlbSecurityGroup580F65A6",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "VpcingressSubnet1Subnet059F22C6",
          },
          Object {
            "Ref": "VpcingressSubnet2SubnetF175D754",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "AlbSecurityGroup580F65A6": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB integlitbyolAlbFF2A6B19",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AlbSecurityGrouptointeglitbyolKeycloakServiceSecurityGroup5E2FE5548080452EC867": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AlbSecurityGroup580F65A6",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "AlbhttpF4DDFFB4": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "FixedResponseConfig": Object {
              "ContentType": "text/plain",
              "MessageBody": "Nothing here",
              "StatusCode": "404",
            },
            "Type": "fixed-response",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "Alb16C2F182",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "AlbhttpKeycloakGroupC074F478": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "AlbhttpKeycloakRuleE6A8F959": Object {
      "Properties": Object {
        "Actions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "AlbhttpKeycloakGroupC074F478",
            },
            "Type": "forward",
          },
        ],
        "Conditions": Array [
          Object {
            "Field": "host-header",
            "HostHeaderConfig": Object {
              "Values": Array [
                "id.example.com",
              ],
            },
          },
        ],
        "ListenerArn": Object {
          "Ref": "AlbhttpF4DDFFB4",
        },
        "Priority": 1000,
      },
      "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
    },
    "KeycloakClusterE151A98B": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "KeycloakDatabase9FB2EF02": Object {
      "Properties": Object {
        "DBClusterParameterGroupName": "default.aurora-mysql5.7",
        "DBSubnetGroupName": Object {
          "Ref": "KeycloakDatabaseSubnets53DB24A3",
        },
        "Engine": "aurora-mysql",
        "EngineMode": "serverless",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "KeycloakDatabaseSecret1C63E8D7",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "KeycloakDatabaseSecret1C63E8D7",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "ScalingConfiguration": Object {
          "AutoPause": true,
          "MaxCapacity": 1,
          "MinCapacity": 1,
          "SecondsUntilAutoPause": 300,
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "KeycloakDatabaseSecurityGroupA9E9D19B",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "KeycloakDatabaseSecret1C63E8D7": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
    },
    "KeycloakDatabaseSecretAttachment10F733C4": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "KeycloakDatabaseSecret1C63E8D7",
        },
        "TargetId": Object {
          "Ref": "KeycloakDatabase9FB2EF02",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "KeycloakDatabaseSecurityGroupA9E9D19B": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakDatabaseSecurityGroupfrominteglitbyolKeycloakServiceSecurityGroup5E2FE554IndirectPort9E456980": Object {
      "Properties": Object {
        "Description": "from integlitbyolKeycloakServiceSecurityGroup5E2FE554:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabase9FB2EF02",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabaseSecurityGroupA9E9D19B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabase9FB2EF02",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakDatabaseSubnets53DB24A3": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for Database database",
        "SubnetIds": Array [
          Object {
            "Ref": "VpcprivateSubnet1SubnetCEAD3716",
          },
          Object {
            "Ref": "VpcprivateSubnet2Subnet2DE7549C",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "KeycloakService398C344C": Object {
      "DependsOn": Array [
        "AlbhttpKeycloakRuleE6A8F959",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "KeycloakClusterE151A98B",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 600,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "keycloak",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "AlbhttpKeycloakGroupC074F478",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "KeycloakServiceSecurityGroup9C087FD3",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VpcprivateSubnet1SubnetCEAD3716",
              },
              Object {
                "Ref": "VpcprivateSubnet2Subnet2DE7549C",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "KeycloakServiceCloudmapService002D27A5",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "KeycloakTaskDefinition8FFB493C",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "KeycloakServiceCloudmapService002D27A5": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "KeycloakServiceDiscoveryNS13221F25",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceDiscoveryNS13221F25",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "KeycloakServiceDiscoveryNS13221F25": Object {
      "Properties": Object {
        "Name": "keycloak-service-discovery",
        "Vpc": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "KeycloakServiceSecurityGroup9C087FD3": Object {
      "Properties": Object {
        "GroupDescription": "integ-lit-byol/Keycloak/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakServiceSecurityGroupfrominteglitbyolAlbSecurityGroup6F9DA49F8080F13833CA": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AlbSecurityGroup580F65A6",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakServiceSecurityGroupfrominteglitbyolKeycloakServiceSecurityGroup5E2FE554ALLTRAFFIC93039D8D": Object {
      "Properties": Object {
        "Description": "from integlitbyolKeycloakServiceSecurityGroup5E2FE554:ALL TRAFFIC",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakTaskDefinition8FFB493C": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "DependsOn": Array [
              Object {
                "Condition": "COMPLETE",
                "ContainerName": "ensure-mysql-database",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "KEYCLOAK_USER",
                "Value": "admin",
              },
              Object {
                "Name": "KEYCLOAK_PASSWORD",
                "Value": "admin",
              },
              Object {
                "Name": "DB_VENDOR",
                "Value": "mysql",
              },
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROTOCOL",
                "Value": "dns.DNS_PING",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROPERTIES",
                "Value": Object {
                  "Fn::Sub": Array [
                    "dns_query=\${ServiceName}.\${ServiceNamespace},dns_record_type=\${QueryType}",
                    Object {
                      "QueryType": "A",
                      "ServiceName": Object {
                        "Fn::GetAtt": Array [
                          "KeycloakServiceCloudmapService002D27A5",
                          "Name",
                        ],
                      },
                      "ServiceNamespace": "keycloak-service-discovery",
                    },
                  ],
                },
              },
              Object {
                "Name": "CACHE_OWNERS_COUNT",
                "Value": "1",
              },
              Object {
                "Name": "CACHE_OWNERS_AUTH_SESSIONS_COUNT",
                "Value": "1",
              },
              Object {
                "Name": "JDBC_PARAMS",
                "Value": "useSSL=false",
              },
              Object {
                "Name": "JAVA_OPTS",
                "Value": "-Djboss.bind.address.management=0.0.0.0",
              },
            ],
            "Essential": true,
            "Image": "jboss/keycloak",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Memory": 2048,
            "MemoryReservation": 1638,
            "Name": "keycloak",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 8443,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 9990,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 7600,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 57600,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 55200,
                "Protocol": "udp",
              },
              Object {
                "ContainerPort": 54200,
                "Protocol": "udp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          Object {
            "Command": Array [
              "sh",
              "-c",
              "mysql -u\\"$DB_USER\\" -p\\"$DB_PASSWORD\\" -h\\"$DB_ADDR\\" -e \\"CREATE DATABASE IF NOT EXISTS $DB_NAME\\"",
            ],
            "Environment": Array [
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
            ],
            "Essential": false,
            "Image": "mysql",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Memory": 128,
            "MemoryReservation": 32,
            "Name": "ensure-mysql-database",
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "KeycloakTaskDefinitionExecutionRole65FF88EF",
            "Arn",
          ],
        },
        "Family": "integlitbyolKeycloakTaskDefinitionB3366CB7",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "KeycloakTaskDefinitionTaskRole35970846",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "KeycloakTaskDefinitionExecutionRole65FF88EF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KeycloakTaskDefinitionExecutionRoleDefaultPolicy5A183F46": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KeycloakTaskDefinitionExecutionRoleDefaultPolicy5A183F46",
        "Roles": Array [
          Object {
            "Ref": "KeycloakTaskDefinitionExecutionRole65FF88EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KeycloakTaskDefinitionTaskRole35970846": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "Vpc8378EB38": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VpcIGWD7BA715C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VpcVPCGWBF912B6E": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "VpcingressSubnet1DefaultRoute4188A546": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcingressSubnet1RouteTable804C7A26",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcingressSubnet1EIPD1FA297B": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcingressSubnet1NATGateway5ADD866D": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcingressSubnet1EIPD1FA297B",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcingressSubnet1Subnet059F22C6",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcingressSubnet1RouteTable804C7A26": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcingressSubnet1RouteTableAssociation5DF54E70": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcingressSubnet1RouteTable804C7A26",
        },
        "SubnetId": Object {
          "Ref": "VpcingressSubnet1Subnet059F22C6",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcingressSubnet1Subnet059F22C6": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcingressSubnet2DefaultRoute18203BC3": Object {
      "DependsOn": Array [
        "VpcVPCGWBF912B6E",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VpcIGWD7BA715C",
        },
        "RouteTableId": Object {
          "Ref": "VpcingressSubnet2RouteTable8B0E23A7",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcingressSubnet2EIP87470ECB": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VpcingressSubnet2NATGatewayDAA0F549": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VpcingressSubnet2EIP87470ECB",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VpcingressSubnet2SubnetF175D754",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VpcingressSubnet2RouteTable8B0E23A7": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcingressSubnet2RouteTableAssociation39E1BA3A": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcingressSubnet2RouteTable8B0E23A7",
        },
        "SubnetId": Object {
          "Ref": "VpcingressSubnet2SubnetF175D754",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcingressSubnet2SubnetF175D754": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcprivateSubnet1DefaultRouteB506891A": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcingressSubnet1NATGateway5ADD866D",
        },
        "RouteTableId": Object {
          "Ref": "VpcprivateSubnet1RouteTable1979EACB",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcprivateSubnet1RouteTable1979EACB": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcprivateSubnet1RouteTableAssociationEEBD93CE": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcprivateSubnet1RouteTable1979EACB",
        },
        "SubnetId": Object {
          "Ref": "VpcprivateSubnet1SubnetCEAD3716",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcprivateSubnet1SubnetCEAD3716": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.8.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VpcprivateSubnet2DefaultRouteBAC3C1C3": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VpcingressSubnet2NATGatewayDAA0F549",
        },
        "RouteTableId": Object {
          "Ref": "VpcprivateSubnet2RouteTable4D0FFC8C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VpcprivateSubnet2RouteTable4D0FFC8C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VpcprivateSubnet2RouteTableAssociationB691E645": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VpcprivateSubnet2RouteTable4D0FFC8C",
        },
        "SubnetId": Object {
          "Ref": "VpcprivateSubnet2Subnet2DE7549C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VpcprivateSubnet2Subnet2DE7549C": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.16.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-byol/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "Vpc8378EB38",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
}
`;

exports[`simplest example 1`] = `
Object {
  "Outputs": Object {
    "KeycloakLoadBalancerUrl601AE2AE": Object {
      "Value": Object {
        "Fn::Sub": Array [
          "http://\${HostName}/",
          Object {
            "HostName": Object {
              "Fn::GetAtt": Array [
                "KeycloakLoadBalancer21EA60AD",
                "DNSName",
              ],
            },
          },
        ],
      },
    },
  },
  "Resources": Object {
    "KeycloakClusterE151A98B": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "KeycloakDatabase9FB2EF02": Object {
      "Properties": Object {
        "DBClusterParameterGroupName": "default.aurora-mysql5.7",
        "DBSubnetGroupName": Object {
          "Ref": "KeycloakDatabaseSubnets53DB24A3",
        },
        "Engine": "aurora-mysql",
        "EngineMode": "serverless",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "KeycloakDatabaseSecret1C63E8D7",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "KeycloakDatabaseSecret1C63E8D7",
              },
              ":SecretString:username::}}",
            ],
          ],
        },
        "ScalingConfiguration": Object {
          "AutoPause": true,
          "MaxCapacity": 1,
          "MinCapacity": 1,
          "SecondsUntilAutoPause": 300,
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "KeycloakDatabaseSecurityGroupA9E9D19B",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "KeycloakDatabaseSecret1C63E8D7": Object {
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": " %+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"admin\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
    },
    "KeycloakDatabaseSecretAttachment10F733C4": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "KeycloakDatabaseSecret1C63E8D7",
        },
        "TargetId": Object {
          "Ref": "KeycloakDatabase9FB2EF02",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "KeycloakDatabaseSecurityGroupA9E9D19B": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakDatabaseSecurityGroupfrominteglitsimplestKeycloakServiceSecurityGroup39D81BE4IndirectPort09F21660": Object {
      "Properties": Object {
        "Description": "from integlitsimplestKeycloakServiceSecurityGroup39D81BE4:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabase9FB2EF02",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabaseSecurityGroupA9E9D19B",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "KeycloakDatabase9FB2EF02",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakDatabaseSubnets53DB24A3": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for Database database",
        "SubnetIds": Array [
          Object {
            "Ref": "KeycloakVpcprivateSubnet1Subnet4F974197",
          },
          Object {
            "Ref": "KeycloakVpcprivateSubnet2Subnet6BA43A32",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "KeycloakLoadBalancer21EA60AD": Object {
      "DependsOn": Array [
        "KeycloakVpcingressSubnet1DefaultRouteA1857EB8",
        "KeycloakVpcingressSubnet2DefaultRouteDAB52A53",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "KeycloakLoadBalancerSecurityGroupBD1401A8",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "KeycloakVpcingressSubnet1Subnet8AF14C17",
          },
          Object {
            "Ref": "KeycloakVpcingressSubnet2Subnet2146939B",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "KeycloakLoadBalancerHTTP71CCF64D": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerHTTPKeycloakGroup7E632BA1",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "KeycloakLoadBalancer21EA60AD",
        },
        "Port": 80,
        "Protocol": "HTTP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "KeycloakLoadBalancerHTTPKeycloakGroup7E632BA1": Object {
      "Properties": Object {
        "HealthCheckEnabled": true,
        "HealthCheckPath": "/auth/realms/master",
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "5",
          },
          Object {
            "Key": "slow_start.duration_seconds",
            "Value": "60",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "KeycloakLoadBalancerSecurityGroupBD1401A8": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB integlitsimplestKeycloakLoadBalancerB32ED323",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakLoadBalancerSecurityGrouptointeglitsimplestKeycloakServiceSecurityGroup39D81BE480806694F471": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakLoadBalancerSecurityGroupBD1401A8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "KeycloakService398C344C": Object {
      "DependsOn": Array [
        "KeycloakLoadBalancerHTTPKeycloakGroup7E632BA1",
        "KeycloakLoadBalancerHTTP71CCF64D",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "KeycloakClusterE151A98B",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 600,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "keycloak",
            "ContainerPort": 8080,
            "TargetGroupArn": Object {
              "Ref": "KeycloakLoadBalancerHTTPKeycloakGroup7E632BA1",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "KeycloakServiceSecurityGroup9C087FD3",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "KeycloakVpcprivateSubnet1Subnet4F974197",
              },
              Object {
                "Ref": "KeycloakVpcprivateSubnet2Subnet6BA43A32",
              },
            ],
          },
        },
        "ServiceRegistries": Array [
          Object {
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "KeycloakServiceCloudmapService002D27A5",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "KeycloakTaskDefinition8FFB493C",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "KeycloakServiceCloudmapService002D27A5": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "KeycloakServiceDiscoveryNS13221F25",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceDiscoveryNS13221F25",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "KeycloakServiceDiscoveryNS13221F25": Object {
      "Properties": Object {
        "Name": "keycloak-service-discovery",
        "Vpc": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "KeycloakServiceSecurityGroup9C087FD3": Object {
      "Properties": Object {
        "GroupDescription": "integ-lit-simplest/Keycloak/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KeycloakServiceSecurityGroupfrominteglitsimplestKeycloakLoadBalancerSecurityGroupDD4F053C80800A85D91E": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakLoadBalancerSecurityGroupBD1401A8",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakServiceSecurityGroupfrominteglitsimplestKeycloakServiceSecurityGroup39D81BE4ALLTRAFFIC30A307CE": Object {
      "Properties": Object {
        "Description": "from integlitsimplestKeycloakServiceSecurityGroup39D81BE4:ALL TRAFFIC",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KeycloakServiceSecurityGroup9C087FD3",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KeycloakTaskDefinition8FFB493C": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "DependsOn": Array [
              Object {
                "Condition": "COMPLETE",
                "ContainerName": "ensure-mysql-database",
              },
            ],
            "Environment": Array [
              Object {
                "Name": "KEYCLOAK_USER",
                "Value": "admin",
              },
              Object {
                "Name": "KEYCLOAK_PASSWORD",
                "Value": "admin",
              },
              Object {
                "Name": "DB_VENDOR",
                "Value": "mysql",
              },
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROTOCOL",
                "Value": "dns.DNS_PING",
              },
              Object {
                "Name": "JGROUPS_DISCOVERY_PROPERTIES",
                "Value": Object {
                  "Fn::Sub": Array [
                    "dns_query=\${ServiceName}.\${ServiceNamespace},dns_record_type=\${QueryType}",
                    Object {
                      "QueryType": "A",
                      "ServiceName": Object {
                        "Fn::GetAtt": Array [
                          "KeycloakServiceCloudmapService002D27A5",
                          "Name",
                        ],
                      },
                      "ServiceNamespace": "keycloak-service-discovery",
                    },
                  ],
                },
              },
              Object {
                "Name": "CACHE_OWNERS_COUNT",
                "Value": "1",
              },
              Object {
                "Name": "CACHE_OWNERS_AUTH_SESSIONS_COUNT",
                "Value": "1",
              },
              Object {
                "Name": "JDBC_PARAMS",
                "Value": "useSSL=false",
              },
              Object {
                "Name": "JAVA_OPTS",
                "Value": "-Djboss.bind.address.management=0.0.0.0",
              },
            ],
            "Essential": true,
            "Image": "jboss/keycloak",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Memory": 2048,
            "MemoryReservation": 1638,
            "Name": "keycloak",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 8443,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 9990,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 7600,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 57600,
                "Protocol": "tcp",
              },
              Object {
                "ContainerPort": 55200,
                "Protocol": "udp",
              },
              Object {
                "ContainerPort": 54200,
                "Protocol": "udp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
          Object {
            "Command": Array [
              "sh",
              "-c",
              "mysql -u\\"$DB_USER\\" -p\\"$DB_PASSWORD\\" -h\\"$DB_ADDR\\" -e \\"CREATE DATABASE IF NOT EXISTS $DB_NAME\\"",
            ],
            "Environment": Array [
              Object {
                "Name": "DB_NAME",
                "Value": "keycloak",
              },
            ],
            "Essential": false,
            "Image": "mysql",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "/cdk-ecs-keycloak",
              },
            },
            "Memory": 128,
            "MemoryReservation": 32,
            "Name": "ensure-mysql-database",
            "Secrets": Array [
              Object {
                "Name": "DB_ADDR",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "1024",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "KeycloakTaskDefinitionExecutionRole65FF88EF",
            "Arn",
          ],
        },
        "Family": "integlitsimplestKeycloakTaskDefinition76B8A95A",
        "Memory": "2048",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "KeycloakTaskDefinitionTaskRole35970846",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "KeycloakTaskDefinitionExecutionRole65FF88EF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KeycloakTaskDefinitionExecutionRoleDefaultPolicy5A183F46": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "KeycloakDatabaseSecretAttachment10F733C4",
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KeycloakTaskDefinitionExecutionRoleDefaultPolicy5A183F46",
        "Roles": Array [
          Object {
            "Ref": "KeycloakTaskDefinitionExecutionRole65FF88EF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KeycloakTaskDefinitionTaskRole35970846": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KeycloakTaskDefinitionensuremysqldatabaseLogGroupA02C0EE3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "KeycloakTaskDefinitionkeycloakLogGroupEF63A90C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "KeycloakVpc8A8F96DC": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "KeycloakVpcIGWA73B101E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "KeycloakVpcVPCGW209A1D6F": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "KeycloakVpcIGWA73B101E",
        },
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "KeycloakVpcingressSubnet1DefaultRouteA1857EB8": Object {
      "DependsOn": Array [
        "KeycloakVpcVPCGW209A1D6F",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "KeycloakVpcIGWA73B101E",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet1RouteTableCF5F46E1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcingressSubnet1EIP2111A6F1": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "KeycloakVpcingressSubnet1NATGateway32A1168B": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "KeycloakVpcingressSubnet1EIP2111A6F1",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet1Subnet8AF14C17",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "KeycloakVpcingressSubnet1RouteTableAssociation9A9E14B7": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet1RouteTableCF5F46E1",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet1Subnet8AF14C17",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcingressSubnet1RouteTableCF5F46E1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcingressSubnet1Subnet8AF14C17": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "KeycloakVpcingressSubnet2DefaultRouteDAB52A53": Object {
      "DependsOn": Array [
        "KeycloakVpcVPCGW209A1D6F",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "KeycloakVpcIGWA73B101E",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet2RouteTable9F64BD61",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcingressSubnet2EIP6A95B85F": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "KeycloakVpcingressSubnet2NATGatewayDE17D04C": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "KeycloakVpcingressSubnet2EIP6A95B85F",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet2Subnet2146939B",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "KeycloakVpcingressSubnet2RouteTable9F64BD61": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcingressSubnet2RouteTableAssociation9C37B3FF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcingressSubnet2RouteTable9F64BD61",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcingressSubnet2Subnet2146939B",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcingressSubnet2Subnet2146939B": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/ingressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "KeycloakVpcprivateSubnet1DefaultRouteB4B66400": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "KeycloakVpcingressSubnet1NATGateway32A1168B",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet1RouteTable70CBA54C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcprivateSubnet1RouteTable70CBA54C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcprivateSubnet1RouteTableAssociationF27128EB": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet1RouteTable70CBA54C",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcprivateSubnet1Subnet4F974197",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcprivateSubnet1Subnet4F974197": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.8.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/privateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "KeycloakVpcprivateSubnet2DefaultRouteCEB187E0": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "KeycloakVpcingressSubnet2NATGatewayDE17D04C",
        },
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet2RouteTable5477ED2B",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "KeycloakVpcprivateSubnet2RouteTable5477ED2B": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "KeycloakVpcprivateSubnet2RouteTableAssociation28D949F0": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "KeycloakVpcprivateSubnet2RouteTable5477ED2B",
        },
        "SubnetId": Object {
          "Ref": "KeycloakVpcprivateSubnet2Subnet6BA43A32",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "KeycloakVpcprivateSubnet2Subnet6BA43A32": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.16.0/21",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "integ-lit-simplest/Keycloak/Vpc/privateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "KeycloakVpc8A8F96DC",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
  },
}
`;
